
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Matthew Laikhram
 */
public class LinkedPanelNode extends javax.swing.JPanel {
    
    /**
     * Creates new form LinkedPanel
     * @param _description
     * @param _background
     * @param _movie
     * @param _passcode
     * @param _prev
     * @param _next
     */
    public LinkedPanelNode(String _description, String _background, String _movie, String _passcode, LinkedPanelNode _prev, LinkedPanelNode _next) {
        listeners = new ArrayList<>();
        description = _description;
        background = _background;
        movie = _movie;
        passCode = _passcode;
        prev = _prev;
        next = _next;
        initComponents();
        initVisibility();
    }
    
    private void initVisibility() {
        try {
            if (movie.equals("") || movie.equals("none")){ 
                replayButton.setVisible(false);
                padLabel1.setVisible(false);
                file = null;
                //media = null;
            }
            else {
                file = new File(System.getProperty("user.dir") + "/src", movie);
                //media = new MediaPanel(file, this);
            }
            if (passCode.equals("") || passCode.equals("none")){
                codePasswordField.setVisible(false);
                padLabel2.setVisible(false);
            }
            if (prev == null) {
                previousButton.setVisible(false);
            }
            if (next == null) {
                continueButton.setText("Finish");
            } else {
                continueButton.setText("Next");
            }
        } catch (Exception ex) {
            System.out.println("Something went wrong with media player" + ex);
        }
    }
    
    public LinkedPanelNode getPrev() {
        return prev;
    }  
     
    public void setPrev(LinkedPanelNode newPrev) {
        prev = newPrev;
        if (prev == null){
                previousButton.setVisible(false);
        }
        else {
            previousButton.setVisible(true);
        }
    }
    
    public LinkedPanelNode getNext() {
        return next;
    }  
     
    public void setNext(LinkedPanelNode newNext) {
        next = newNext;
        if (next == null){
                continueButton.setText("Finish");
        } else {
            continueButton.setText("Next");
        }
    }
    
    /*public MediaPanel getMedia() {
        return media;
    }*/
    
    public void playMovie() {
        if (!(movie.equals("") || movie.equals("none"))) {
            try {          
                Desktop.getDesktop().open(file);             
            } catch (IOException ex) {
                Logger.getLogger(CompScenarioSim.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this passCode. The content of this method is always
 regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        flowPanel = new javax.swing.JPanel();
        replayButton = new javax.swing.JButton();
        padLabel1 = new javax.swing.JLabel();
        codePasswordField = new javax.swing.JPasswordField();
        padLabel2 = new javax.swing.JLabel();
        previousButton = new javax.swing.JButton();
        continueButton = new javax.swing.JButton();
        contentPanel = new javax.swing.JPanel();
        descriptionScrollPane = new javax.swing.JScrollPane();
        descriptionTextPane = new javax.swing.JTextPane();
        backgroundLabel = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(1600, 900));
        setMinimumSize(new java.awt.Dimension(1600, 900));
        setPreferredSize(new java.awt.Dimension(1600, 900));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        flowPanel.setMaximumSize(new java.awt.Dimension(780, 170));
        flowPanel.setMinimumSize(new java.awt.Dimension(780, 170));
        flowPanel.setOpaque(false);
        flowPanel.setPreferredSize(new java.awt.Dimension(780, 170));
        flowPanel.setLayout(new java.awt.GridBagLayout());

        replayButton.setText("Replay Movie");
        replayButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                replayButtonMouseClicked(evt);
            }
        });
        flowPanel.add(replayButton, new java.awt.GridBagConstraints());

        padLabel1.setText("                 ");
        flowPanel.add(padLabel1, new java.awt.GridBagConstraints());

        codePasswordField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        codePasswordField.setPreferredSize(new java.awt.Dimension(140, 30));
        codePasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codePasswordFieldActionPerformed(evt);
            }
        });
        codePasswordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codePasswordFieldKeyPressed(evt);
            }
        });
        flowPanel.add(codePasswordField, new java.awt.GridBagConstraints());

        padLabel2.setText("                 ");
        flowPanel.add(padLabel2, new java.awt.GridBagConstraints());

        previousButton.setText("Previous");
        previousButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                previousButtonMouseClicked(evt);
            }
        });
        flowPanel.add(previousButton, new java.awt.GridBagConstraints());

        continueButton.setText("Next");
        continueButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                continueButtonMouseClicked(evt);
            }
        });
        flowPanel.add(continueButton, new java.awt.GridBagConstraints());

        add(flowPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 600, 1600, 300));

        contentPanel.setMaximumSize(new java.awt.Dimension(780, 240));
        contentPanel.setMinimumSize(new java.awt.Dimension(780, 240));
        contentPanel.setOpaque(false);
        contentPanel.setPreferredSize(new java.awt.Dimension(780, 240));
        contentPanel.setLayout(new java.awt.GridBagLayout());

        descriptionScrollPane.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        descriptionScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        descriptionScrollPane.setViewportBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        descriptionScrollPane.setMaximumSize(new java.awt.Dimension(900, 450));
        descriptionScrollPane.setMinimumSize(new java.awt.Dimension(900, 33));
        descriptionScrollPane.setOpaque(false);
        descriptionScrollPane.getViewport().setOpaque(false);
        descriptionScrollPane.setPreferredSize(new java.awt.Dimension(900, 600));

        descriptionTextPane.setEditable(false);
        descriptionTextPane.setBackground(new java.awt.Color(255, 255, 255, 0));
        descriptionTextPane.setBorder(null);
        descriptionTextPane.setContentType("text/html"); // NOI18N
        descriptionTextPane.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        descriptionTextPane.setText(description);
        descriptionTextPane.setOpaque(false);
        descriptionTextPane.setPreferredSize(new java.awt.Dimension(900, 87));
        descriptionScrollPane.setViewportView(descriptionTextPane);
        //move scrollbar to the top of the text
        descriptionTextPane.setCaretPosition(0);

        contentPanel.add(descriptionScrollPane, new java.awt.GridBagConstraints());

        add(contentPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1600, 650));

        backgroundLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(background)));
        backgroundLabel.setMaximumSize(new java.awt.Dimension(1600, 900));
        backgroundLabel.setMinimumSize(new java.awt.Dimension(1600, 900));
        backgroundLabel.setPreferredSize(new java.awt.Dimension(1600, 900));
        add(backgroundLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void replayButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_replayButtonMouseClicked
        playMovie();
    }//GEN-LAST:event_replayButtonMouseClicked

    private void continueButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_continueButtonMouseClicked
        if ("".equals(passCode) || "none".equals(passCode) || new String(codePasswordField.getPassword()).equals(passCode)) {
            for (FinishedListener f : listeners) {
                f.fireFinished();
            }
            codePasswordField.setForeground(new java.awt.Color(0, 0, 0));
        }
        else {
            codePasswordField.setForeground(new java.awt.Color(255, 0, 0));
        }
    }//GEN-LAST:event_continueButtonMouseClicked

    private void previousButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previousButtonMouseClicked
        for (FinishedListener f : listeners) {
            f.firePrev();
        }
    }//GEN-LAST:event_previousButtonMouseClicked

    private void codePasswordFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codePasswordFieldKeyPressed
        codePasswordField.setForeground(new java.awt.Color(0, 0, 0));
    }//GEN-LAST:event_codePasswordFieldKeyPressed

    private void codePasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codePasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codePasswordFieldActionPerformed

    public void addListener(FinishedListener listener) {
        listeners.add(listener);
    }
    
    public ArrayList<FinishedListener> getListeners() {
        return listeners;
    }
    
    private String description;
    private String background;
    private String movie;
    private File file;
    //private MediaPanel media;
    private String passCode;
    private LinkedPanelNode prev;
    private LinkedPanelNode next;
    private ArrayList<FinishedListener> listeners;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backgroundLabel;
    private javax.swing.JPasswordField codePasswordField;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JButton continueButton;
    private javax.swing.JScrollPane descriptionScrollPane;
    private javax.swing.JTextPane descriptionTextPane;
    private javax.swing.JPanel flowPanel;
    private javax.swing.JLabel padLabel1;
    private javax.swing.JLabel padLabel2;
    private javax.swing.JButton previousButton;
    private javax.swing.JButton replayButton;
    // End of variables declaration//GEN-END:variables

}
