
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Matthew Laikhram
 */
public class CompScenarioSim extends javax.swing.JFrame {

    /**
     * Creates new form ProjectMM
     * @param f
     * @param srcFolder
     * @throws java.io.FileNotFoundException
     */
    public CompScenarioSim(File f, String srcFolder) throws FileNotFoundException {
        
        java.net.URL url = ClassLoader.getSystemResource("eg_logo.png");
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.createImage(url);
        setIconImage(img);
        
        Scanner scanner = new Scanner(f);
        
        ArrayList<LinkedPanelNode> nodes = new ArrayList<>();
        ArrayList<Boolean> prevLinks = new ArrayList<>();
        
        String temp;
        boolean playOnOpen = true;
        String description = "";
        String background;
        String movie;
        String passcode;
        
        //get title for the application
        if (scanner.hasNextLine()) {
            setTitle(scanner.nextLine());
        }
        //determine if movies should play on open
        if (scanner.hasNextLine() && scanner.nextLine().equals("false")) {
            playOnOpen = false;
        }
        
        while (scanner.hasNextLine()) {
            //read for description
            while (scanner.hasNextLine()) {
                temp = scanner.nextLine();
                if (temp.equals("end")) {
                    break;
                }
                else {
                    description += temp;
                }
            }
            //read for the rest and add the node
            background = srcFolder + scanner.nextLine();
            temp = scanner.nextLine();
            if (temp.equals("none")) movie = "none";
            else movie = srcFolder + temp;
            temp = scanner.nextLine();
            if (temp.equals("none")) passcode = "none";
            else passcode = temp;
            temp = scanner.nextLine();
            if (temp.equals("true")) {
                prevLinks.add(true);
            }
            else {
                prevLinks.add(false);
            }
            LinkedPanelNode node = new LinkedPanelNode(description, background, movie, passcode, null, null);
            nodes.add(node);
            description = "";
        }
        //link all the nodes together
        link = new LinkedPanel(nodes.get(0));
        for(int i = 1; i < nodes.size(); ++i) {
            nodes.get(i-1).setNext(nodes.get(i));
            if (prevLinks.get(i)) {
                nodes.get(i).setPrev(nodes.get(i-1));
            }
            if (!playOnOpen) {
                nodes.get(i).addListener(link);
            }
        }          
        initComponents();
        add(link);
    }
    
    @Override
    public void setVisible(boolean b) {
        super.setVisible(b);
        //play movie on set visible
        if (b) {
            link.play();
        }
    }
    
    /*
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(link.getPreferredSize()
        );
        setResizable(false);
        getContentPane().setLayout(new java.awt.CardLayout());

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CompScenarioSim.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CompScenarioSim.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CompScenarioSim.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CompScenarioSim.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new CompScenarioSim(new File(System.getProperty("user.dir") + "/src/lab8/lab8.txt"), "lab8/").setVisible(true);
                } catch (FileNotFoundException ex) {
                    System.out.println("Error: file not found" + ex);
                    System.out.println(System.getProperty("user.dir"));
                }
            }
        });
    }

    private LinkedPanel link;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
